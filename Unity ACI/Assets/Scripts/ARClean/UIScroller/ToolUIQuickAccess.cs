/* 
 * Author: Lim Rui An Ryan
 * Filename: ToolUIQuickAccess.cs
 * Description: A script that is to be attached to the interface element generated by the ToolUIGenerator to allow for quick access to the variables required in game logic
 */
using UnityEngine.UI;
using UnityEngine;
using TMPro;

public class ToolUIQuickAccess : MonoBehaviour {
    // Public
    public Image IconSelf;
    public GameObject LockedIcon;
    public GameObject SelectedIcon;
    public TextMeshProUGUI ToolTip;
    public ARCleanDataStore.PlayerTool ToolType = ARCleanDataStore.PlayerTool.PT_Undefined;

    // Private
    [SerializeField] Sprite Icon_Sponge;
    [SerializeField] Sprite Icon_Genie;
    [SerializeField] Sprite Icon_Kellen;
    [SerializeField] Sprite Icon_DryCloth;
    [SerializeField] Sprite Icon_CookingOil;
    [SerializeField] Sprite Icon_Alcosan;
    [SerializeField] Sprite Icon_Broom;
    [SerializeField] Sprite Icon_Glove;
    [SerializeField] Sprite Icon_Water;
    [SerializeField] Sprite Icon_Alkaclean;
    [SerializeField] Sprite Icon_Wiper;
    [SerializeField] Sprite Icon_HardBrush;
    private bool Locked = true;

    public void SetPlayerTool()
    {
        if (!LockedIcon.activeSelf)
        {
            Pair<ARCleanDataStore.PlayerTool, ARCleanDataStore.PlayerTool> pTools = ARCleanDataStore.playerTools;

            // If selected tool is already selected, unselect it.
            if (ARCleanDataStore.GetPlayerTool() != ARCleanDataStore.PlayerTool.PT_Undefined
                && (pTools.First == ToolType || pTools.Second == ToolType))
            {
                if (pTools.First == ToolType)
                {
                    pTools.First = ARCleanDataStore.PlayerTool.PT_Undefined;
                    pTools.isFirst = true;
                    ARCleanDataStore.SetPlayerTool(pTools.Second);
                    SetToolIconBasedOnType();
                }
                else if (pTools.Second == ToolType)
                {
                    pTools.Second = ARCleanDataStore.PlayerTool.PT_Undefined;
                    pTools.isFirst = false;
                    ARCleanDataStore.SetPlayerTool(pTools.First);
                    SetToolIconBasedOnType();
                }
                //ARCleanDataStore.SetPlayerTool(ARCleanDataStore.PlayerTool.PT_Undefined);
                SelectedIcon.SetActive(false);
                return;
            }

            // If 1st & 2nd have tool assigned, return. 
            if (pTools.First != ARCleanDataStore.PlayerTool.PT_Undefined
                && pTools.Second != ARCleanDataStore.PlayerTool.PT_Undefined)
                return;

            ARCleanDataStore.SetPlayerTool(ToolType);
            if(pTools.isFirst)
            {
                pTools.First = ToolType;
                pTools.isFirst = false;
            }
            else
            {
                pTools.Second = ToolType;
                pTools.isFirst = true;
            }
            if (!CheckCombination())
                return;
            SetToolIconBasedOnType();
            SelectedIcon.SetActive(true);
            Locked = false;

            //if (ARCleanDataStore.ModelAccess.ScrollerModule)
            //    ARCleanDataStore.ModelAccess.ScrollerModule.LerpToPage((int)ToolType - 1);
        }
    }

    public void SetButtonInteractability(bool Interactable)
    {
        IconSelf.gameObject.GetComponent<Button>().interactable = Interactable;
    }

    public bool GetLocked()
    {
        return Locked;
    }

    public void SetIconBasedOnType()
    {
        switch (ToolType)
        {
            case ARCleanDataStore.PlayerTool.PT_Sponge:
                if (Icon_Sponge != null)
                    IconSelf.sprite = Icon_Sponge;
                ToolTip.text = "Sponge";
                break;
            case ARCleanDataStore.PlayerTool.PT_HeavySpongeGenie:
                if (Icon_Genie != null)
                    IconSelf.sprite = Icon_Genie;
                ToolTip.text = "Genie";
                break;
            case ARCleanDataStore.PlayerTool.PT_HeavySpongeKellen:
                if (Icon_Kellen != null)
                    IconSelf.sprite = Icon_Kellen;
                ToolTip.text = "Kleen";
                break;
            case ARCleanDataStore.PlayerTool.PT_DryCloth:
                if (Icon_DryCloth != null)
                    IconSelf.sprite = Icon_DryCloth;
                ToolTip.text = "Dry Cloth";
                break;
            case ARCleanDataStore.PlayerTool.PT_CookingOil:
                if (Icon_CookingOil != null)
                    IconSelf.sprite = Icon_CookingOil;
                ToolTip.text = "Cooking Oil";
                break;
            case ARCleanDataStore.PlayerTool.PT_Alcosan:
                if (Icon_Alcosan != null)
                    IconSelf.sprite = Icon_Alcosan;
                ToolTip.text = "Alcosan";
                break;
            case ARCleanDataStore.PlayerTool.PT_Broom:
                if (Icon_DryCloth != null)
                    IconSelf.sprite = Icon_Broom;
                ToolTip.text = "Broom";
                break;
            case ARCleanDataStore.PlayerTool.PT_Glove:
                if (Icon_CookingOil != null)
                    IconSelf.sprite = Icon_Glove;
                ToolTip.text = "Metal Glove";
                break;
            case ARCleanDataStore.PlayerTool.PT_Water:
                if (Icon_Water != null)
                    IconSelf.sprite = Icon_Water;
                ToolTip.text = "Pail of Water";
                break;
            case ARCleanDataStore.PlayerTool.PT_Alkaclean:
                if (Icon_Alkaclean != null)
                    IconSelf.sprite = Icon_Alkaclean;
                ToolTip.text = "Alkaclean";
                break;
            case ARCleanDataStore.PlayerTool.PT_Wiper:
                if (Icon_Wiper != null)
                    IconSelf.sprite = Icon_Wiper;
                ToolTip.text = "Wiper";
                break;
            case ARCleanDataStore.PlayerTool.PT_HardBrush:
                if (Icon_HardBrush != null)
                    IconSelf.sprite = Icon_HardBrush;
                ToolTip.text = "Hard Brush";
                break;
            case ARCleanDataStore.PlayerTool.PT_Genie:
                if (Icon_Genie != null)
                    IconSelf.sprite = Icon_Genie;
                ToolTip.text = "Genie";
                break;
            case ARCleanDataStore.PlayerTool.PT_Kellen:
                if (Icon_Kellen != null)
                    IconSelf.sprite = Icon_Kellen;
                ToolTip.text = "Kleen";
                break;
            case ARCleanDataStore.PlayerTool.PT_ClothAlcosan:
                if (Icon_Alcosan != null)
                    IconSelf.sprite = Icon_Alcosan;
                ToolTip.text = "Alcosan";
                break;
        }
    }

    public void SetToolIconBasedOnType()
    {
        if (ARCleanDataStore.ModelAccess.CurrentToolImage == null)
            return;
        switch (ARCleanDataStore.GetPlayerTool())//ToolType)
        {
            case ARCleanDataStore.PlayerTool.PT_Sponge:
                if (Icon_Sponge != null)
                    ARCleanDataStore.ModelAccess.CurrentToolImage.sprite = Icon_Sponge;
                break;
            case ARCleanDataStore.PlayerTool.PT_HeavySpongeGenie:
                if (Icon_Genie != null)
                    ARCleanDataStore.ModelAccess.CurrentToolImage.sprite = Icon_Genie;
                break;
            case ARCleanDataStore.PlayerTool.PT_HeavySpongeKellen:
                if (Icon_Kellen != null)
                    ARCleanDataStore.ModelAccess.CurrentToolImage.sprite = Icon_Kellen;
                break;
            case ARCleanDataStore.PlayerTool.PT_DryCloth:
                if (Icon_DryCloth != null)
                    ARCleanDataStore.ModelAccess.CurrentToolImage.sprite = Icon_DryCloth;
                break;
            case ARCleanDataStore.PlayerTool.PT_CookingOil:
                if (Icon_CookingOil != null)
                    ARCleanDataStore.ModelAccess.CurrentToolImage.sprite = Icon_CookingOil;
                break;
            case ARCleanDataStore.PlayerTool.PT_Alcosan:
                if (Icon_Alcosan != null)
                    ARCleanDataStore.ModelAccess.CurrentToolImage.sprite = Icon_Alcosan;
                break;
            case ARCleanDataStore.PlayerTool.PT_Broom:
                if (Icon_DryCloth != null)
                    ARCleanDataStore.ModelAccess.CurrentToolImage.sprite = Icon_Broom;
                break;
            case ARCleanDataStore.PlayerTool.PT_Glove:
                if (Icon_CookingOil != null)
                    ARCleanDataStore.ModelAccess.CurrentToolImage.sprite = Icon_Glove;
                break;
            case ARCleanDataStore.PlayerTool.PT_Water:
                if (Icon_Water != null)
                    ARCleanDataStore.ModelAccess.CurrentToolImage.sprite = Icon_Water;
                break;
            case ARCleanDataStore.PlayerTool.PT_Alkaclean:
                if (Icon_Alkaclean != null)
                    ARCleanDataStore.ModelAccess.CurrentToolImage.sprite = Icon_Alkaclean;
                break;
            case ARCleanDataStore.PlayerTool.PT_Wiper:
                if (Icon_Wiper != null)
                    ARCleanDataStore.ModelAccess.CurrentToolImage.sprite = Icon_Wiper;
                break;
            case ARCleanDataStore.PlayerTool.PT_HardBrush:
                if (Icon_HardBrush != null)
                    ARCleanDataStore.ModelAccess.CurrentToolImage.sprite = Icon_HardBrush;
                break;
            case ARCleanDataStore.PlayerTool.PT_Genie:
                if (Icon_Genie != null)
                    ARCleanDataStore.ModelAccess.CurrentToolImage.sprite = Icon_Genie;
                break;
            case ARCleanDataStore.PlayerTool.PT_Kellen:
                if (Icon_Kellen != null)
                    ARCleanDataStore.ModelAccess.CurrentToolImage.sprite = Icon_Kellen;
                break;
            case ARCleanDataStore.PlayerTool.PT_ClothAlcosan:
                if (Icon_Alcosan != null)
                    ARCleanDataStore.ModelAccess.CurrentToolImage.sprite = Icon_Alcosan;
                break;
            default:
                if (ARCleanDataStore.ModelAccess.DefaultToolIcon != null)
                    ARCleanDataStore.ModelAccess.CurrentToolImage.sprite = ARCleanDataStore.ModelAccess.DefaultToolIcon;
                break;
        }
    }

    bool CheckCombination()
    {
        // If 2 tools are not selected, return
        if (ARCleanDataStore.playerTools.First == ARCleanDataStore.PlayerTool.PT_Undefined
           || ARCleanDataStore.playerTools.Second == ARCleanDataStore.PlayerTool.PT_Undefined)
            return true;

        Pair<ARCleanDataStore.PlayerTool, ARCleanDataStore.PlayerTool> pTool 
            = new Pair<ARCleanDataStore.PlayerTool, ARCleanDataStore.PlayerTool>(ARCleanDataStore.playerTools);

        // possible combinations
        if((pTool.First == ARCleanDataStore.PlayerTool.PT_Kellen || pTool.Second == ARCleanDataStore.PlayerTool.PT_Kellen)
            && (pTool.First == ARCleanDataStore.PlayerTool.PT_Sponge || pTool.Second == ARCleanDataStore.PlayerTool.PT_Sponge))
        {
            ARCleanDataStore.SetPlayerTool(ARCleanDataStore.PlayerTool.PT_HeavySpongeKellen);
            Debug.Log("Combi To: Kellen");
            return true;
        }
        else if((pTool.First == ARCleanDataStore.PlayerTool.PT_Genie || pTool.Second == ARCleanDataStore.PlayerTool.PT_Genie)
            && (pTool.First == ARCleanDataStore.PlayerTool.PT_Sponge || pTool.Second == ARCleanDataStore.PlayerTool.PT_Sponge))
        {
            ARCleanDataStore.SetPlayerTool(ARCleanDataStore.PlayerTool.PT_HeavySpongeGenie);
            Debug.Log("Combi To: Genie");
            return true;
        }
        else if((pTool.First == ARCleanDataStore.PlayerTool.PT_DryCloth || pTool.Second == ARCleanDataStore.PlayerTool.PT_DryCloth)
            && (pTool.First == ARCleanDataStore.PlayerTool.PT_Alcosan || pTool.Second == ARCleanDataStore.PlayerTool.PT_Alcosan))
        {
            ARCleanDataStore.SetPlayerTool(ARCleanDataStore.PlayerTool.PT_ClothAlcosan);
            Debug.Log("Combi To: Alcosan");
            return true;
        }
        else
        {
            // Deselect them and set curr tool to undefine
            ARCleanDataStore.playerTools.First = ARCleanDataStore.PlayerTool.PT_Undefined;
            ARCleanDataStore.playerTools.Second = ARCleanDataStore.PlayerTool.PT_Undefined;
            ARCleanDataStore.playerTools.isFirst = true;

            foreach (ToolUIQuickAccess Tool in ARCleanDataStore.LinkedToolInventory)
                if (Tool != null)
                    Tool.SelectedIcon.SetActive(false);

            ARCleanDataStore.SetPlayerTool(ARCleanDataStore.PlayerTool.PT_Undefined);
            Debug.Log("Combi To: nothing");
            return false;
        }

    }
}